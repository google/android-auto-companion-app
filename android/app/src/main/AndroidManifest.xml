<!--
 Copyright 2022 Google LLC

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.google.automotive.companion">

  <!-- Permissions are needed here to have access to BLE. -->
  <uses-permission android:name="android.permission.BLUETOOTH" />
  <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
  <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
  <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
  <uses-permission android:name="android.permission.INTERNET" />
  <uses-permission android:name="android.permission.READ_CALENDAR" />
  <!-- Required to use CompanionDeviceManager API. -->
  <uses-feature android:name="android.software.companion_device_setup"/>
  <!-- Permission required to run the service (ConnectedDeviceBaseService) -->
  <!-- in the background for reconnection scanning. -->
  <uses-permission android:name="android.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND"/>

  <!-- Bluetooth permissions for Android 12. -->
  <uses-permission android:name="android.permission.BLUETOOTH_SCAN"
      android:usesPermissionFlags="neverForLocation" />
  <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />

  <!-- Required for messaging sync on Android 11+ -->
  <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES" />

  <!-- Permissions are needed here to receive boot up broadcast. -->
  <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
  <!-- Permissions are needed here to start service as foreground. -->
  <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />

  <!-- io.flutter.app.FlutterApplication is an android.app.Application that
       calls FlutterMain.startInitialization(this); in its onCreate method.
       In most cases you can leave this as-is, but you if you want to provide
       additional functionality it is fine to subclass or reimplement
       FlutterApplication and put your custom class here. -->
  <application
      android:name="${applicationName}"
      android:label="@string/app_name"
      android:icon="@mipmap/ic_launcher">
    <meta-data
        android:name="flutterEmbedding"
        android:value="2" />
    <activity
        android:name=".MainActivity"
        android:launchMode="singleTop"
        android:theme="@style/LaunchTheme"
        android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
        android:hardwareAccelerated="true"
        android:exported="true"
        android:windowSoftInputMode="adjustResize">
      <!-- Specifies an Android theme to apply to this Activity as soon as
           the Android process has started. This theme is visible to the user
           while the Flutter UI initializes. After that, this theme continues
           to determine the Window background behind the Flutter UI. -->
      <meta-data
          android:name="io.flutter.embedding.android.NormalTheme"
          android:resource="@style/NormalTheme"
          />
      <!-- Displays an Android View that continues showing the launch screen
           Drawable until Flutter paints its first frame, then this splash
           screen fades out. A splash screen is useful to avoid any visual
           gap between the end of Android's launch screen and the painting of
           Flutter's first frame. -->
      <meta-data
          android:name="io.flutter.embedding.android.SplashScreenDrawable"
          android:resource="@drawable/launch_background"
          />
      <intent-filter>
        <action android:name="android.intent.action.MAIN"/>
        <category android:name="android.intent.category.LAUNCHER"/>
      </intent-filter>
    </activity>
    <!-- Don't delete the meta-data below.
         This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
    <meta-data
        android:name="flutterEmbedding"
        android:value="2" />
    <service
        android:exported="false"
        android:name=".ConnectedDeviceService">
    </service>
    <service
        android:name="com.google.android.libraries.car.notifications.NotificationListener"
        android:label="Notification Listener Permissions"
        android:exported="false"
        android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
      <intent-filter>
        <action android:name="android.service.notification.NotificationListenerService" />
      </intent-filter>
    </service>
    <receiver
        android:exported="false"
        android:name=".StartDiscoveryBroadcastReceiver">
      <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED"/>
      </intent-filter>
    </receiver>
    <receiver
        android:exported="false"
        android:name="com.google.android.libraries.car.connectionservice.PhoneSyncReceiver">
      <intent-filter>
        <action android:name="com.google.android.libraries.car.connectionservice.DEVICE_FOUND"/>
      </intent-filter>
    </receiver>
  </application>
</manifest>
